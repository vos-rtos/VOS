/*#############################################################################
 * 文件名：histogram.h
 * 功能：  实现了指纹直方图的操作
 * modified by  PRTsinghua@hotmail.com
#############################################################################*/

#if !defined FVS__HISTOGRAM_HEADER__INCLUDED__
#define FVS__HISTOGRAM_HEADER__INCLUDED__

/* 基本类型定义 */
#include "fvstypes.h"
#include "image.h"


/* 对象的这些接口实现是私有的，不必为用户所知。使用这里提供的函数操作直方图 */
typedef FvsHandle_t FvsHistogram_t;


/******************************************************************************
  * 功能：创建一个新的直方图对象
  * 参数：无
  * 返回：失败返回空，否则返回直方图对象
******************************************************************************/
FvsHistogram_t HistogramCreate(void);


/******************************************************************************
  * 功能：破坏一个存在的直方图对象
  * 参数：histogram 直方图对象指针
  * 返回：错误编号
******************************************************************************/
void HistogramDestroy(FvsHistogram_t histogram);


/******************************************************************************
  * 功能：重置一个存在的直方图对象为0
  * 参数：histogram 直方图对象指针
  * 返回：错误编号
******************************************************************************/
FvsError_t HistogramReset(FvsHistogram_t histogram);


/******************************************************************************
  * 功能：计算一个8-bit图像的直方图
  * 参数：histogram 直方图对象指针
  *       image     图像指针
  * 返回：错误编号
******************************************************************************/
FvsError_t HistogramCompute(FvsHistogram_t histogram, const FvsImage_t image);


/******************************************************************************
  * 功能：计算一个直方图对象的均值
  * 参数：histogram 直方图对象指针
  * 返回：均值
******************************************************************************/
FvsByte_t HistogramGetMean(const FvsHistogram_t histogram);


/******************************************************************************
  * 功能：计算一个直方图对象的方差
  * 参数：histogram 直方图对象指针
  * 返回：方差
******************************************************************************/
FvsUint_t HistogramGetVariance(const FvsHistogram_t histogram);


#endif /* FVS__HISTOGRAM_HEADER__INCLUDED__ */

