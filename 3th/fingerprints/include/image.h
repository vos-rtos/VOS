/*#############################################################################
 * 文件名：image.h
 * 功能：  实现了指纹图像的基本操作
 * modified by  PRTsinghua@hotmail.com
#############################################################################*/

#if !defined FVS__IMAGE_HEADER__INCLUDED__
#define FVS__IMAGE_HEADER__INCLUDED__

/* 基本类型定义 */
#include "fvstypes.h"


/* 对象的这些接口实现是私有的，不必为用户所知。使用这里提供的函数操作图像 */
typedef FvsHandle_t FvsImage_t;


/* 定义图像属性 */
typedef enum
{
    FvsImageGray      = 0,	/* 8-bit灰度图像 */
    FvsImageBinarized = 1,	/* 二值化图像    */
    FvsImageThinned   = 2,	/* 细化图像      */
} FvsImageFlag_t;


/******************************************************************************
  * 功能：创建一个新的图像对象
  * 参数：无
  * 返回：失败返回空，否则返回新的图像对象
******************************************************************************/
FvsImage_t ImageCreate(void);


/******************************************************************************
  * 功能：销毁一个图像对象
  * 参数：image  指向图像对象的指针
  * 返回：无
******************************************************************************/
void ImageDestroy(FvsImage_t image);


/******************************************************************************
  * 功能：设置一个图像对象的大小
  * 参数：image   指向图像对象的指针
  *       width   图像宽度
  *       height  图像高度
  * 返回：错误编号
******************************************************************************/
FvsError_t ImageSetSize(FvsImage_t image, const FvsInt_t width, 
							const FvsInt_t height);


/******************************************************************************
  * 功能：设置图像标记，该操作大部分由库函数自动完成
  * 参数：image  指向图像对象的指针
  *       flag   标记
  * 返回：错误编号
******************************************************************************/
FvsError_t ImageSetFlag(FvsImage_t image, const FvsImageFlag_t flag);


/******************************************************************************
  * 功能：获得图像标记
  * 参数：image  指向图像对象的指针
  * 返回：图像标记
******************************************************************************/
FvsImageFlag_t ImageGetFlag(const FvsImage_t image);


/******************************************************************************
  * 功能：拷贝图像
  * 参数：destination  指向目标图像对象的指针
  *       source       指向源图像对象的指针
  * 返回：错误编号
******************************************************************************/
FvsError_t ImageCopy(FvsImage_t destination, const FvsImage_t source);


/******************************************************************************
  * 功能：清空图像
  * 参数：image  指向图像对象的指针
  * 返回：错误编号
******************************************************************************/
FvsError_t ImageClear(FvsImage_t image);


/******************************************************************************
  * 功能：设置图像中所有象素为特定值
  * 参数：image  指向图像对象的指针
  *       value  要设定的值
  * 返回：错误编号
******************************************************************************/
FvsError_t ImageFlood(FvsImage_t image, const FvsByte_t value);


/******************************************************************************
  * 功能：设置图像中某个象素的值
  * 参数：image  指向图像对象的指针
  *       x      X轴坐标
  *       y      Y轴坐标
  *       val    要设定的值
  * 返回：无
******************************************************************************/
void ImageSetPixel(FvsImage_t image, const FvsInt_t x, const FvsInt_t y, 
								const FvsByte_t val);


/******************************************************************************
  * 功能：获得图像中某个象素的值
  * 参数：image  指向图像对象的指针
  *       x      X轴坐标
  *       y      Y轴坐标
  * 返回：象素的值
******************************************************************************/
FvsByte_t ImageGetPixel(const FvsImage_t image, const FvsInt_t x, 
								const FvsInt_t y);


/******************************************************************************
  * 功能：获得图像缓冲区指针
  * 参数：image  指向图像对象的指针
  * 返回：指向图像内存缓冲区的指针
******************************************************************************/
FvsByte_t* ImageGetBuffer(FvsImage_t image);


/******************************************************************************
  * 功能：获得图像宽度
  * 参数：image  指向图像对象的指针
  * 返回：图像宽度
******************************************************************************/
FvsInt_t ImageGetWidth(const FvsImage_t image);


/******************************************************************************
  * 功能：获得图像高度
  * 参数：image  指向图像对象的指针
  * 返回：图像高度
******************************************************************************/
FvsInt_t ImageGetHeight(const FvsImage_t image);


/******************************************************************************
  * 功能：获得图像倾斜度
  * 参数：image  指向图像对象的指针
  * 返回：倾斜度
******************************************************************************/
FvsInt_t ImageGetPitch(const FvsImage_t image);


/******************************************************************************
  * 功能：获得图像缓冲区的大小
  * 参数：image  指向图像对象的指针
  * 返回：缓冲区大小
******************************************************************************/
FvsInt_t ImageGetSize(const FvsImage_t image);


/******************************************************************************
  * 功能：比较两个图像大小
  * 参数：image1  指向图像对象1的指针
  *       image2  指向图像对象2的指针
  * 返回：若两个图像大小相等，返回true；否则返回false
******************************************************************************/
FvsBool_t ImageCompareSize(const FvsImage_t image1, const FvsImage_t image2);


#endif /* FVS__IMAGE_HEADER__INCLUDED__ */

